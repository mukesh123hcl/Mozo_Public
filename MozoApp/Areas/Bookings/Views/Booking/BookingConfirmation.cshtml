@model MozoApp.Areas.Bookings.Models.Booking_View

@{ ViewData["Title"] = "Book Your MoZo";
    Layout = "~/Areas/Bookings/Views/Shared/_LayoutBooking.cshtml";


<script type="text/javascript">

		function jsGetService(value) {
			var url = '@Url.Content("~/")' + "Admin/Price/GetService_list";

			$.getJSON(url, { Service_Type_Id:value }, function (data) {

				var items = "<option value='0'>Please select Sevice</option>";
				$("#ServiceId").empty();
				$.each(data, function (i, servicelist) {
					items += "<option value='" + servicelist.value + "'>" + servicelist.text + "</option>";
				});
				$('#ServiceId').html(items);
			});
		};

</script> 





<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="http://code.jquery.com/jquery.min.js" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCFGlHLem72DY8vk2XiariJYNYef5R4jNs&callback=initAutocomplete&libraries=places&v=weekly"
        defer></script>
<script type="text/javascript">function initAutocomplete() {
        const map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: -33.8688, lng: 151.2195 },
            zoom: 13,
            mapTypeId: "roadmap",
        });
        // Create the search box and link it to the UI element.
        const input = document.getElementById("pac-input");
        const searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        // Bias the SearchBox results towards current map's viewport.
        map.addListener("bounds_changed", () => {
            searchBox.setBounds(map.getBounds());
        });
        let markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener("places_changed", () => {
            const places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            // Clear out the old markers.
            markers.forEach((marker) => {
                marker.setMap(null);
            });
            markers = [];
            // For each place, get the icon, name and location.
            const bounds = new google.maps.LatLngBounds();
            places.forEach((place) => {
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                const icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25),
                };
                // Create a marker for each place.
                markers.push(
                    new google.maps.Marker({
                        map,
                        icon,
                        title: place.name,
                        position: place.geometry.location,
                    })
                );

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });
    }</script>



                                                    }


<section class="page-title-section overlay" data-background="~/images/backgrounds/page-title.jpg">


    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <ul class="list-inline custom-breadcrumb">
                    <li class="list-inline-item"><a class="h2 text-primary font-secondary" href="@@page-link">Book Your Mozo</a></li>
                    <li class="list-inline-item text-white h3 font-secondary @@nasted"></li>
                </ul>
                <p class="text-lighten">Book your mozo as per your convienent</p>
            </div>
        </div>
    </div>
</section>
<section class="section bg-gray">
    <div class="container">
        

        <section>
            <form asp-area="Bookings" asp-action="AddBooking" asp-controller="Booking" method="post" class="form-horizontal" role="form">
                                

            </form>
        </section>
    </div>
</section>


